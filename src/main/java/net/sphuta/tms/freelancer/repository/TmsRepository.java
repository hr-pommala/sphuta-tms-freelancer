// TmsRepository.java
package net.sphuta.tms.freelancer.repository;

import net.sphuta.tms.freelancer.entity.TmsEntity;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

import java.util.UUID;

/**
 * Repository interface for managing {@link TmsEntity} (clients).
 *
 * <p>Responsibilities:</p>
 * <ul>
 *   <li>Provides standard CRUD operations through {@link JpaRepository}.</li>
 *   <li>Exposes custom query methods to support advanced client search.</li>
 *   <li>Implementation is auto-generated by Spring Data JPA at runtime.</li>
 * </ul>
 *
 * <p>Usage:</p>
 * - Injected into service classes that handle business logic around clients.
 * - Used to filter and search active/inactive clients with flexible query options.
 */
public interface TmsRepository extends JpaRepository<TmsEntity, UUID> {

    /**
     * Search clients by active status and optional free-text query.
     *
     * <p>Criteria:</p>
     * <ul>
     *   <li>Matches the provided {@code active} flag (true = active, false = inactive).</li>
     *   <li>If {@code q} is blank or null, no text filtering is applied.</li>
     *   <li>If {@code q} is provided, it matches case-insensitive partial values across:</li>
     *       <ul>
     *           <li>Company name</li>
     *           <li>First name</li>
     *           <li>Last name</li>
     *           <li>Email</li>
     *       </ul>
     * </ul>
     *
     * <p>Pagination:</p>
     * Results are wrapped in a {@link Page} object and controlled by {@link Pageable}.
     *
     * @param active whether to search active or inactive clients
     * @param q optional free-text search keyword
     * @param pageable pagination and sorting information
     * @return a page of matching {@link TmsEntity} records
     */
    @Query("""
           select c from TmsEntity c
           where c.isActive = :active
             and (coalesce(:q,'') = '' or
                  lower(concat(coalesce(c.companyName,''),' ',coalesce(c.firstName,''),' ',
                               coalesce(c.lastName,''),' ',coalesce(c.email,'')))
                  like lower(concat('%',:q,'%')) )
           """)
    Page<TmsEntity> search(boolean active, String q, Pageable pageable);
}
